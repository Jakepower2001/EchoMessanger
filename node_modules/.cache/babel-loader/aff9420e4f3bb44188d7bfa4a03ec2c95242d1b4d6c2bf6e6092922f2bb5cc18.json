{"ast":null,"code":"var _jsxFileName = \"C:\\\\messagingapp\\\\firebase-react-messaging-app\\\\src\\\\components\\\\Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { auth, db } from \"../firebase/config\";\nimport { collection, query, where, orderBy, addDoc, onSnapshot } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  selectedFriend\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const messagesEndRef = useRef(null);\n\n  // Fetch messages in real-time\n  useEffect(() => {\n    var _auth$currentUser;\n    if (!selectedFriend) {\n      setMessages([]);\n      return;\n    }\n    const q = query(collection(db, \"messages\"), where(\"participants\", \"array-contains\", (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.uid), orderBy(\"timestamp\"));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const msgs = [];\n      snapshot.forEach(doc => {\n        var _auth$currentUser2;\n        const data = doc.data();\n        if (data.participants.includes(selectedFriend) && data.participants.includes((_auth$currentUser2 = auth.currentUser) === null || _auth$currentUser2 === void 0 ? void 0 : _auth$currentUser2.uid)) {\n          msgs.push({\n            id: doc.id,\n            sender: data.sender,\n            text: data.text,\n            timestamp: data.timestamp\n          });\n        }\n      });\n      setMessages(msgs);\n    });\n    return () => unsubscribe();\n  }, [selectedFriend]);\n\n  // Scroll to bottom on new message\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // Send message\n  const sendMessage = async e => {\n    var _auth$currentUser3, _auth$currentUser4;\n    e.preventDefault();\n    if (!newMessage.trim() || !selectedFriend) return;\n    await addDoc(collection(db, \"messages\"), {\n      sender: (_auth$currentUser3 = auth.currentUser) === null || _auth$currentUser3 === void 0 ? void 0 : _auth$currentUser3.uid,\n      participants: [(_auth$currentUser4 = auth.currentUser) === null || _auth$currentUser4 === void 0 ? void 0 : _auth$currentUser4.uid, selectedFriend],\n      text: newMessage,\n      timestamp: new Date()\n    });\n    setNewMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    style: {\n      flex: 1,\n      overflowY: \"auto\",\n      padding: \"1em\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [messages.map(msg => {\n        var _auth$currentUser5, _auth$currentUser6, _auth$currentUser7, _auth$currentUser8, _msg$timestamp;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.sender === ((_auth$currentUser5 = auth.currentUser) === null || _auth$currentUser5 === void 0 ? void 0 : _auth$currentUser5.uid) ? \"my-message\" : \"friend-message\",\n          style: {\n            textAlign: msg.sender === ((_auth$currentUser6 = auth.currentUser) === null || _auth$currentUser6 === void 0 ? void 0 : _auth$currentUser6.uid) ? \"right\" : \"left\",\n            margin: \"0.5em 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: \"inline-block\",\n              background: msg.sender === ((_auth$currentUser7 = auth.currentUser) === null || _auth$currentUser7 === void 0 ? void 0 : _auth$currentUser7.uid) ? \"#4078c0\" : \"#eee\",\n              color: msg.sender === ((_auth$currentUser8 = auth.currentUser) === null || _auth$currentUser8 === void 0 ? void 0 : _auth$currentUser8.uid) ? \"#fff\" : \"#222\",\n              borderRadius: \"16px\",\n              padding: \"0.5em 1em\",\n              maxWidth: \"60%\",\n              wordBreak: \"break-word\"\n            },\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: \"0.8em\",\n              color: \"#888\"\n            },\n            children: (_msg$timestamp = msg.timestamp) !== null && _msg$timestamp !== void 0 && _msg$timestamp.toDate ? msg.timestamp.toDate().toLocaleTimeString() : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\",\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-btn\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"n2MIJz2VkQNl6fvGL50/iSCD/7k=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","auth","db","collection","query","where","orderBy","addDoc","onSnapshot","jsxDEV","_jsxDEV","Chat","selectedFriend","_s","messages","setMessages","newMessage","setNewMessage","messagesEndRef","_auth$currentUser","q","currentUser","uid","unsubscribe","snapshot","msgs","forEach","doc","_auth$currentUser2","data","participants","includes","push","id","sender","text","timestamp","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","e","_auth$currentUser3","_auth$currentUser4","preventDefault","trim","Date","className","style","flex","overflowY","padding","children","map","msg","_auth$currentUser5","_auth$currentUser6","_auth$currentUser7","_auth$currentUser8","_msg$timestamp","textAlign","margin","display","background","color","borderRadius","maxWidth","wordBreak","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","toDate","toLocaleTimeString","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/messagingapp/firebase-react-messaging-app/src/components/Chat.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { auth, db } from \"../firebase/config\";\nimport {\n  collection,\n  query,\n  where,\n  orderBy,\n  getDocs,\n  addDoc,\n  serverTimestamp,\n  onSnapshot,\n} from \"firebase/firestore\";\n\ninterface Message {\n  id: string;\n  sender: string;\n  text: string;\n  timestamp: any;\n}\n\ninterface Props {\n  selectedFriend: string | null;\n}\n\nconst Chat: React.FC<Props> = ({ selectedFriend }) => {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  // Fetch messages in real-time\n  useEffect(() => {\n    if (!selectedFriend) {\n      setMessages([]);\n      return;\n    }\n    const q = query(\n      collection(db, \"messages\"),\n      where(\"participants\", \"array-contains\", auth.currentUser?.uid),\n      orderBy(\"timestamp\")\n    );\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const msgs: Message[] = [];\n      snapshot.forEach((doc) => {\n        const data = doc.data();\n        if (\n          data.participants.includes(selectedFriend) &&\n          data.participants.includes(auth.currentUser?.uid)\n        ) {\n          msgs.push({\n            id: doc.id,\n            sender: data.sender,\n            text: data.text,\n            timestamp: data.timestamp,\n          });\n        }\n      });\n      setMessages(msgs);\n    });\n    return () => unsubscribe();\n  }, [selectedFriend]);\n\n  // Scroll to bottom on new message\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  // Send message\n  const sendMessage = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!newMessage.trim() || !selectedFriend) return;\n    await addDoc(collection(db, \"messages\"), {\n      sender: auth.currentUser?.uid,\n      participants: [auth.currentUser?.uid, selectedFriend],\n      text: newMessage,\n      timestamp: new Date(),\n    });\n    setNewMessage(\"\");\n  };\n\n  return (\n    <div className=\"chat-container\" style={{ flex: 1, overflowY: \"auto\", padding: \"1em\" }}>\n      <div className=\"messages\">\n        {messages.map((msg) => (\n          <div\n            key={msg.id}\n            className={\n              msg.sender === auth.currentUser?.uid ? \"my-message\" : \"friend-message\"\n            }\n            style={{\n              textAlign: msg.sender === auth.currentUser?.uid ? \"right\" : \"left\",\n              margin: \"0.5em 0\",\n            }}\n          >\n            <span\n              style={{\n                display: \"inline-block\",\n                background: msg.sender === auth.currentUser?.uid ? \"#4078c0\" : \"#eee\",\n                color: msg.sender === auth.currentUser?.uid ? \"#fff\" : \"#222\",\n                borderRadius: \"16px\",\n                padding: \"0.5em 1em\",\n                maxWidth: \"60%\",\n                wordBreak: \"break-word\",\n              }}\n            >\n              {msg.text}\n            </span>\n            <div style={{ fontSize: \"0.8em\", color: \"#888\" }}>\n              {msg.timestamp?.toDate\n                ? msg.timestamp.toDate().toLocaleTimeString()\n                : \"\"}\n            </div>\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      <form onSubmit={sendMessage} className=\"chat-input\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Type a message...\"\n          className=\"message-input\"\n        />\n        <button type=\"submit\" className=\"send-btn\">\n          Send\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}