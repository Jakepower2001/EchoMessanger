{"ast":null,"code":"var _jsxFileName = \"C:\\\\messagingapp\\\\firebase-react-messaging-app\\\\src\\\\components\\\\LoggedInHome.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport UserList from \"./UserList\";\nimport Chat from \"./Chat\";\nimport { auth, db } from \"../firebase/config\";\nimport { collection, query, where, getDocs, addDoc, doc, setDoc, deleteDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoggedInHome = () => {\n  _s();\n  const user = auth.currentUser;\n  const [searchEmail, setSearchEmail] = useState(\"\");\n  const [searchResult, setSearchResult] = useState(null);\n  const [requests, setRequests] = useState([]);\n  const [friends, setFriends] = useState([]);\n  const [showFriends, setShowFriends] = useState(true);\n  const [selectedFriend, setSelectedFriend] = useState(null);\n  const handleLogout = async () => {\n    await auth.signOut();\n    window.location.href = \"/login\";\n  };\n\n  // Helper to get user info by UID\n  const getUserInfo = async uid => {\n    const userDoc = await getDocs(query(collection(db, \"users\"), where(\"uid\", \"==\", uid)));\n    if (!userDoc.empty) {\n      return userDoc.docs[0].data();\n    }\n    return {\n      email: uid\n    };\n  };\n\n  // Search for users by email\n  const handleSearch = async () => {\n    const q = query(collection(db, \"users\"), where(\"email\", \"==\", searchEmail));\n    const snapshot = await getDocs(q);\n    if (!snapshot.empty) {\n      setSearchResult({\n        ...snapshot.docs[0].data(),\n        uid: snapshot.docs[0].id\n      });\n    } else {\n      setSearchResult(null);\n      alert(\"User not found\");\n    }\n  };\n\n  // Send friend request\n  const sendFriendRequest = async toUid => {\n    var _auth$currentUser;\n    await addDoc(collection(db, \"friendRequests\"), {\n      from: (_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.uid,\n      to: toUid,\n      status: \"pending\"\n    });\n    alert(\"Friend request sent!\");\n    setSearchResult(null);\n    setSearchEmail(\"\");\n  };\n\n  // Fetch incoming friend requests\n  useEffect(() => {\n    const fetchRequests = async () => {\n      if (!auth.currentUser || !auth.currentUser.uid) return; // <-- Guard inside async\n      const q = query(collection(db, \"friendRequests\"), where(\"to\", \"==\", auth.currentUser.uid), where(\"status\", \"==\", \"pending\"));\n      const snapshot = await getDocs(q);\n      const requestsWithInfo = await Promise.all(snapshot.docs.map(async doc => {\n        const data = doc.data();\n        const senderInfo = await getUserInfo(data.from);\n        return {\n          id: doc.id,\n          ...data,\n          senderInfo\n        };\n      }));\n      setRequests(requestsWithInfo);\n    };\n    fetchRequests();\n  }, []);\n\n  // Accept or decline friend request\n  const respondToRequest = async (requestId, accept, fromUid) => {\n    const requestRef = doc(db, \"friendRequests\", requestId);\n    await setDoc(requestRef, {\n      status: accept ? \"accepted\" : \"declined\"\n    }, {\n      merge: true\n    });\n    if (accept) {\n      var _auth$currentUser2;\n      await addDoc(collection(db, \"friends\"), {\n        users: [(_auth$currentUser2 = auth.currentUser) === null || _auth$currentUser2 === void 0 ? void 0 : _auth$currentUser2.uid, fromUid]\n      });\n    }\n    setRequests(requests.filter(r => r.id !== requestId));\n  };\n\n  // Fetch friends\n  useEffect(() => {\n    const fetchFriends = async () => {\n      if (!auth.currentUser || !auth.currentUser.uid) return;\n      const q = query(collection(db, \"friends\"), where(\"users\", \"array-contains\", auth.currentUser.uid));\n      const snapshot = await getDocs(q);\n      const friendUids = snapshot.docs.map(doc => doc.data().users.filter(uid => {\n        var _auth$currentUser3;\n        return uid !== ((_auth$currentUser3 = auth.currentUser) === null || _auth$currentUser3 === void 0 ? void 0 : _auth$currentUser3.uid);\n      })[0]).filter(Boolean);\n\n      // Fetch user info for each friend UID\n      const friendsWithInfo = await Promise.all(friendUids.map(async uid => {\n        const userSnap = await getDocs(query(collection(db, \"users\"), where(\"id\", \"==\", uid)));\n        if (!userSnap.empty) {\n          const data = userSnap.docs[0].data();\n          return {\n            uid,\n            name: data.name || data.email || uid\n          };\n        }\n        return {\n          uid,\n          name: uid\n        };\n      }));\n      setFriends(friendsWithInfo);\n    };\n    fetchFriends();\n  }, []);\n\n  // Unfriend function\n  const unfriend = async friendUid => {\n    var _auth$currentUser4;\n    const q = query(collection(db, \"friends\"), where(\"users\", \"array-contains\", (_auth$currentUser4 = auth.currentUser) === null || _auth$currentUser4 === void 0 ? void 0 : _auth$currentUser4.uid));\n    const snapshot = await getDocs(q);\n    const docToDelete = snapshot.docs.find(doc => {\n      var _auth$currentUser5;\n      const users = doc.data().users;\n      return users.includes(friendUid) && users.includes((_auth$currentUser5 = auth.currentUser) === null || _auth$currentUser5 === void 0 ? void 0 : _auth$currentUser5.uid);\n    });\n    if (docToDelete) {\n      await deleteDoc(docToDelete.ref);\n      setFriends(friends.filter(friend => friend.uid !== friendUid));\n      alert(\"Unfriended!\");\n      if (selectedFriend === friendUid) setSelectedFriend(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://i.pravatar.cc/60\",\n          alt: \"Profile\",\n          className: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: (user === null || user === void 0 ? void 0 : user.displayName) || (user === null || user === void 0 ? void 0 : user.email)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search\",\n        placeholder: \"Search users by email\",\n        value: searchEmail,\n        onChange: e => setSearchEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), searchResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: searchResult.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendFriendRequest(searchResult.uid),\n          children: \"Add Friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Friend Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: requests.map(req => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [req.senderInfo.name || req.senderInfo.email, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => respondToRequest(req.id, true, req.from),\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => respondToRequest(req.id, false, req.from),\n            children: \"Decline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, req.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Friends\", /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: 10\n          },\n          onClick: () => setShowFriends(!showFriends),\n          children: showFriends ? \"Hide\" : \"Show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), showFriends && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: friends.map(friend => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              background: selectedFriend === friend.uid ? \"#4078c0\" : \"#222\",\n              color: \"#fff\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              padding: \"0.3em 1em\",\n              marginRight: \"0.5em\"\n            },\n            onClick: () => setSelectedFriend(friend.uid),\n            children: friend.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => unfriend(friend.uid),\n            children: \"Unfriend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)]\n        }, friend.uid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chat-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://i.pravatar.cc/60?u=chat\",\n          alt: \"Chat User\",\n          className: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedFriend ? `Chat with ${selectedFriend}` : \"Select a friend to chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {\n        selectedFriend: selectedFriend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"info-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://i.pravatar.cc/60?u=info\",\n          alt: \"Info User\",\n          className: \"avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Maria Nelson\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Grateful for every sunrise and sunset \\uD83C\\uDF05\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Chat settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Privacy & help\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Shared photos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Shared files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"block-btn\",\n        children: \"Block User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(LoggedInHome, \"ZugVEwAnc3BaGTw8YKR5/njaAn8=\");\n_c = LoggedInHome;\nexport default LoggedInHome;\nvar _c;\n$RefreshReg$(_c, \"LoggedInHome\");","map":{"version":3,"names":["React","useState","useEffect","UserList","Chat","auth","db","collection","query","where","getDocs","addDoc","doc","setDoc","deleteDoc","jsxDEV","_jsxDEV","LoggedInHome","_s","user","currentUser","searchEmail","setSearchEmail","searchResult","setSearchResult","requests","setRequests","friends","setFriends","showFriends","setShowFriends","selectedFriend","setSelectedFriend","handleLogout","signOut","window","location","href","getUserInfo","uid","userDoc","empty","docs","data","email","handleSearch","q","snapshot","id","alert","sendFriendRequest","toUid","_auth$currentUser","from","to","status","fetchRequests","requestsWithInfo","Promise","all","map","senderInfo","respondToRequest","requestId","accept","fromUid","requestRef","merge","_auth$currentUser2","users","filter","r","fetchFriends","friendUids","_auth$currentUser3","Boolean","friendsWithInfo","userSnap","name","unfriend","friendUid","_auth$currentUser4","docToDelete","find","_auth$currentUser5","includes","ref","friend","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","displayName","placeholder","value","onChange","e","target","onClick","req","style","marginLeft","background","color","border","borderRadius","padding","marginRight","_c","$RefreshReg$"],"sources":["C:/messagingapp/firebase-react-messaging-app/src/components/LoggedInHome.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport UserList from \"./UserList\";\r\nimport Chat from \"./Chat\";\r\nimport { auth, db } from \"../firebase/config\";\r\nimport { collection, query, where, getDocs, addDoc, doc, setDoc, deleteDoc } from \"firebase/firestore\";\r\n\r\nconst LoggedInHome: React.FC = () => {\r\n  const user = auth.currentUser;\r\n  const [searchEmail, setSearchEmail] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState<any>(null);\r\n  const [requests, setRequests] = useState<any[]>([]);\r\n  const [friends, setFriends] = useState<any[]>([]);\r\n  const [showFriends, setShowFriends] = useState(true);\r\n  const [selectedFriend, setSelectedFriend] = useState<string | null>(null);\r\n\r\n  const handleLogout = async () => {\r\n    await auth.signOut();\r\n    window.location.href = \"/login\";\r\n  };\r\n\r\n  // Helper to get user info by UID\r\n  const getUserInfo = async (uid: string) => {\r\n    const userDoc = await getDocs(query(collection(db, \"users\"), where(\"uid\", \"==\", uid)));\r\n    if (!userDoc.empty) {\r\n      return userDoc.docs[0].data();\r\n    }\r\n    return { email: uid };\r\n  };\r\n\r\n  // Search for users by email\r\n  const handleSearch = async () => {\r\n    const q = query(collection(db, \"users\"), where(\"email\", \"==\", searchEmail));\r\n    const snapshot = await getDocs(q);\r\n    if (!snapshot.empty) {\r\n      setSearchResult({ ...snapshot.docs[0].data(), uid: snapshot.docs[0].id });\r\n    } else {\r\n      setSearchResult(null);\r\n      alert(\"User not found\");\r\n    }\r\n  };\r\n\r\n  // Send friend request\r\n  const sendFriendRequest = async (toUid: string) => {\r\n    await addDoc(collection(db, \"friendRequests\"), {\r\n      from: auth.currentUser?.uid,\r\n      to: toUid,\r\n      status: \"pending\"\r\n    });\r\n    alert(\"Friend request sent!\");\r\n    setSearchResult(null);\r\n    setSearchEmail(\"\");\r\n  };\r\n\r\n  // Fetch incoming friend requests\r\n  useEffect(() => {\r\n    const fetchRequests = async () => {\r\n      if (!auth.currentUser || !auth.currentUser.uid) return; // <-- Guard inside async\r\n      const q = query(\r\n        collection(db, \"friendRequests\"),\r\n        where(\"to\", \"==\", auth.currentUser.uid),\r\n        where(\"status\", \"==\", \"pending\")\r\n      );\r\n      const snapshot = await getDocs(q);\r\n      const requestsWithInfo = await Promise.all(snapshot.docs.map(async doc => {\r\n        const data = doc.data();\r\n        const senderInfo = await getUserInfo(data.from);\r\n        return { id: doc.id, ...data, senderInfo };\r\n      }));\r\n      setRequests(requestsWithInfo);\r\n    };\r\n    fetchRequests();\r\n  }, []);\r\n\r\n  // Accept or decline friend request\r\n  const respondToRequest = async (requestId: string, accept: boolean, fromUid: string) => {\r\n    const requestRef = doc(db, \"friendRequests\", requestId);\r\n    await setDoc(requestRef, { status: accept ? \"accepted\" : \"declined\" }, { merge: true });\r\n    if (accept) {\r\n      await addDoc(collection(db, \"friends\"), {\r\n        users: [auth.currentUser?.uid, fromUid]\r\n      });\r\n    }\r\n    setRequests(requests.filter(r => r.id !== requestId));\r\n  };\r\n\r\n  // Fetch friends\r\n  useEffect(() => {\r\n    const fetchFriends = async () => {\r\n      if (!auth.currentUser || !auth.currentUser.uid) return;\r\n      const q = query(\r\n        collection(db, \"friends\"),\r\n        where(\"users\", \"array-contains\", auth.currentUser.uid)\r\n      );\r\n      const snapshot = await getDocs(q);\r\n      const friendUids = snapshot.docs\r\n        .map(doc =>\r\n          doc.data().users.filter((uid: string) => uid !== auth.currentUser?.uid)[0]\r\n        )\r\n        .filter(Boolean);\r\n\r\n      // Fetch user info for each friend UID\r\n      const friendsWithInfo = await Promise.all(\r\n        friendUids.map(async (uid: string) => {\r\n          const userSnap = await getDocs(query(collection(db, \"users\"), where(\"id\", \"==\", uid)));\r\n          if (!userSnap.empty) {\r\n            const data = userSnap.docs[0].data();\r\n            return { uid, name: data.name || data.email || uid };\r\n          }\r\n          return { uid, name: uid };\r\n        })\r\n      );\r\n      setFriends(friendsWithInfo);\r\n    };\r\n    fetchFriends();\r\n  }, []);\r\n\r\n  // Unfriend function\r\n  const unfriend = async (friendUid: string) => {\r\n    const q = query(\r\n      collection(db, \"friends\"),\r\n      where(\"users\", \"array-contains\", auth.currentUser?.uid)\r\n    );\r\n    const snapshot = await getDocs(q);\r\n    const docToDelete = snapshot.docs.find(doc => {\r\n      const users = doc.data().users;\r\n      return users.includes(friendUid) && users.includes(auth.currentUser?.uid);\r\n    });\r\n    if (docToDelete) {\r\n      await deleteDoc(docToDelete.ref);\r\n      setFriends(friends.filter(friend => friend.uid !== friendUid));\r\n      alert(\"Unfriended!\");\r\n      if (selectedFriend === friendUid) setSelectedFriend(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      {/* Friends List */}\r\n      <aside className=\"sidebar\">\r\n        <div className=\"profile\">\r\n          <img src=\"https://i.pravatar.cc/60\" alt=\"Profile\" className=\"avatar\" />\r\n          <h3>{user?.displayName || user?.email}</h3>\r\n        </div>\r\n        <input\r\n          className=\"search\"\r\n          placeholder=\"Search users by email\"\r\n          value={searchEmail}\r\n          onChange={e => setSearchEmail(e.target.value)}\r\n        />\r\n        <button onClick={handleSearch}>Search</button>\r\n        {searchResult && (\r\n          <div>\r\n            <span>{searchResult.email}</span>\r\n            <button onClick={() => sendFriendRequest(searchResult.uid)}>Add Friend</button>\r\n          </div>\r\n        )}\r\n        <h4>Friend Requests</h4>\r\n        <ul>\r\n          {requests.map(req => (\r\n            <li key={req.id}>\r\n              {req.senderInfo.name || req.senderInfo.email}\r\n              <button onClick={() => respondToRequest(req.id, true, req.from)}>Accept</button>\r\n              <button onClick={() => respondToRequest(req.id, false, req.from)}>Decline</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <h4>\r\n          Friends\r\n          <button style={{ marginLeft: 10 }} onClick={() => setShowFriends(!showFriends)}>\r\n            {showFriends ? \"Hide\" : \"Show\"}\r\n          </button>\r\n        </h4>\r\n        {showFriends && (\r\n          <ul>\r\n            {friends.map(friend => (\r\n              <li key={friend.uid}>\r\n                <button\r\n                  style={{\r\n                    background: selectedFriend === friend.uid ? \"#4078c0\" : \"#222\",\r\n                    color: \"#fff\",\r\n                    border: \"none\",\r\n                    borderRadius: \"4px\",\r\n                    padding: \"0.3em 1em\",\r\n                    marginRight: \"0.5em\",\r\n                  }}\r\n                  onClick={() => setSelectedFriend(friend.uid)}\r\n                >\r\n                  {friend.name}\r\n                </button>\r\n                <button onClick={() => unfriend(friend.uid)}>Unfriend</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n        <UserList />\r\n      </aside>\r\n\r\n      {/* Chat Section */}\r\n      <section className=\"chat-section\">\r\n        <header className=\"chat-header\">\r\n          <img src=\"https://i.pravatar.cc/60?u=chat\" alt=\"Chat User\" className=\"avatar\" />\r\n          <div>\r\n            <h3>\r\n              {selectedFriend\r\n                ? `Chat with ${selectedFriend}`\r\n                : \"Select a friend to chat\"}\r\n            </h3>\r\n          </div>\r\n        </header>\r\n        <Chat selectedFriend={selectedFriend} />\r\n      </section>\r\n\r\n      {/* Settings/Info Section */}\r\n      <aside className=\"info-section\">\r\n        <div className=\"info-header\">\r\n          <img src=\"https://i.pravatar.cc/60?u=info\" alt=\"Info User\" className=\"avatar\" />\r\n          <h3>Maria Nelson</h3>\r\n          <span>Grateful for every sunrise and sunset 🌅</span>\r\n        </div>\r\n        <div className=\"settings-list\">\r\n          <div>Chat settings</div>\r\n          <div>Privacy & help</div>\r\n          <div>Shared photos</div>\r\n          <div>Shared files</div>\r\n        </div>\r\n        <button className=\"block-btn\">Block User</button>\r\n        <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\r\n      </aside>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoggedInHome;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}